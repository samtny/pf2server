<?phpclass LatLon {	public $lat;	public $lon;}class GeocodeResult {	public $coordinate;	public $southwest;	public $northeast;	function __construct() {		$this->coordinate = new LatLon();		$this->southwest = new LatLon();		$this->northeast = new LatLon();	}}class Status {	public $status;	function __construct() {		$this->status = "none";	}}class GameDict {	public $en;	function __construct() {		$this->en = array();	}}class Meta {	public $gamedict;	function __construct() {		$this->gamedict = new GameDict();	}}class Request {	public $venues;	function __construct() {		$this->venues = array();	}	public function loadXML($xml) {				$doc = new DOMDocument();		$doc->loadXML($xml);				$locs = $doc->getElementsByTagName("loc");				foreach ($locs as $loc) {						$venue = new Venue();						$venue->id = $loc->getAttribute("key");			$venue->flag = $loc->getAttribute("flag");			$venue->name = $loc->getElementsByTagName("name")->item(0)->nodeValue;			$venue->street = $loc->getElementsByTagName("addr")->item(0)->nodeValue;			$venue->city = $loc->getElementsByTagName("city")->item(0)->nodeValue;			$venue->state = $loc->getElementsByTagName("state")->item(0)->nodeValue;			$venue->zipcode = $loc->getElementsByTagName("zipcode")->item(0)->nodeValue;			$venue->phone = $loc->getElementsByTagName("phone")->item(0)->nodeValue;			$venue->lat = $loc->getElementsByTagName("lat")->item(0)->nodeValue;			$venue->lon = $loc->getElementsByTagName("lon")->item(0)->nodeValue;			$venue->updated = $loc->getElementsByTagName("date")->item(0)->nodeValue;			$venue->source = $loc->getElementsByTagName("source")->item(0)->nodeValue;			$venue->url = $loc->getElementsByTagName("url")->item(0)->nodeValue;						$games = $loc->getElementsByTagName("game");						foreach ($games as $g) {								$game = new Game();								$game->id = $g->getAttribute("key");				$game->deleted = $g->getAttribute("deleted");				$game->abbr = $g->getElementsByTagName("abbr")->item(0)->nodeValue;				$game->cond = $g->getElementsByTagName("cond")->item(0)->nodeValue;				$game->price = $g->getElementsByTagName("price")->item(0)->nodeValue;				$game->ipdb = $g->getElementsByTagName("ipdb")->item(0)->nodeValue;								$venue->games[] = $game;							}						$comments = $loc->getElementsByTagName("comment");						foreach ($comments as $c) {								$comment = new Comment();								$comment->id = $c->getAttribute("key");				$comment->text = $c->getElementsByTagName("ctext")->item(0)->nodeValue;				$comment->date = $c->getElementsByTagName("cdate")->item(0)->nodeValue;								$venue->comments[] = $comment;							}						$this->venues[] = $venue;					}			}}class Result {	public $status;	public $meta;	public $venues;	function __construct() {		$this->status = new Status();		$this->meta = new Meta();		$this->venues = array();	}	public function saveJSON() {		return json_encode($this);	}	public function saveXML($minimal = false) {				// instantiate xml object		$imp = new DOMImplementation();		$dtd = $imp->createDocumentType('pinfinderapp', '', 'http://www.pinballfinder.org/pinfinderapp.dtd');		$doc = $imp->createDocument('', '', $dtd);		$doc->encoding="UTF-8";				$doc->formatOutput = false;				$r = $doc->createElement('pinfinderapp');		$doc->appendChild($r);				// start with status;		$status = $doc->createElement("status");		$status->appendChild($doc->createTextNode($this->status->status));		$r->appendChild($status);				// start "meta" block - game dictionary, etc;		$meta = $doc->createElement("meta");				// start "locations" block;		$locs = $doc->createElement('locations');				foreach ($this->venues as $venue) {						$loc = $doc->createElement("loc");						// id			$name = $doc->createAttribute("key");			$name->appendChild($doc->createTextNode($venue->id));			$loc->appendChild($name);						// name			$name = $doc->createElement("name");			$name->appendChild($doc->createTextNode($venue->name));			$loc->appendChild($name);						if ($venue->street) {				$name = $doc->createElement("addr");				$name->appendChild($doc->createTextNode($venue->street));				$loc->appendChild($name);			}						if (!$minimal) {				if ($venue->city) {				$name = $doc->createElement("city");				$name->appendChild($doc->createTextNode($venue->city));				$loc->appendChild($name);				}								if ($venue->state) {				$name = $doc->createElement("state");				$name->appendChild($doc->createTextNode($venue->state));				$loc->appendChild($name);				}								if ($venue->zipcode) {				$name = $doc->createElement("zipcode");				$name->appendChild($doc->createTextNode($venue->zipcode));				$loc->appendChild($name);				}								if ($venue->phone) {				$name = $doc->createElement("phone");				$name->appendChild($doc->createTextNode($venue->phone));				$loc->appendChild($name);				}							}						if ($venue->lat) {			$name = $doc->createElement("lat");			$name->appendChild($doc->createTextNode($venue->lat));			$loc->appendChild($name);			}						if ($venue->lon) {			$name = $doc->createElement("lon");			$name->appendChild($doc->createTextNode($venue->lon));			$loc->appendChild($name);			}						//$name = $doc->createElement("dist");			//$name->appendChild($doc->createTextNode(sprintf("%01.2f", $d)));			//$loc->appendChild($name);						if (!$minimal) {								if ($venue->dist) {					$name = $doc->createElement("dist");					$name->appendChild($doc->createTextNode($venue->dist));					$loc->appendChild($name);				}								if ($venue->updated) {					$name = $doc->createElement("date");					$name->appendChild($doc->createTextNode(substr($venue->updated, 0, 10)));					$loc->appendChild($name);				}								if ($venue->source) {					$name = $doc->createElement("source");					$name->appendChild($doc->createTextNode($venue->source));					$loc->appendChild($name);				}								if ($venue->url) {				$name = $doc->createElement("url");				$name->appendChild($doc->createTextNode($venue->url));				$loc->appendChild($name);				}								foreach ($venue->games as $g) {										$game = $doc->createElement("game");										$name = $doc->createAttribute("key");					$name->appendChild($doc->createTextNode($g->id));					$game->appendChild($name);										if ($g->deleted) {						$name = $doc->createAttribute("deleted");						$name->appendChild($doc->createTextNode($g->deleted));						$game->appendChild($name);					}										if ($g->new) {					$name = $doc->createAttribute("new");					$name->appendChild($doc->createTextNode($g->new));					$game->appendChild($name);					}										if ($g->rare) {					$name = $doc->createAttribute("rare");					$name->appendChild($doc->createTextNode($g->rare));					$game->appendChild($name);					}										$name = $doc->createElement("abbr");					$name->appendChild($doc->createTextNode($g->abbr));					$game->appendChild($name);										$name = $doc->createElement("cond");					$name->appendChild($doc->createTextNode($g->cond));					$game->appendChild($name);										$name = $doc->createElement("price");					$name->appendChild($doc->createTextNode($g->price));					$game->appendChild($name);										$name = $doc->createElement("ipdb");					$name->appendChild($doc->createTextNode($g->ipdb));					$game->appendChild($name);										$loc->appendChild($game);									}								foreach ($venue->comments as $c) {										$comment = $doc->createElement("comment");								$name = $doc->createAttribute("key");					$name->appendChild($doc->createTextNode($c->id));					$comment->appendChild($name);										$name = $doc->createElement("ctext");					$name->appendChild($doc->createTextNode($c->text));					$comment->appendChild($name);										if ($c->date) {						$name = $doc->createElement("cdate");						$name->appendChild($doc->createTextNode(str_replace('T', ' ', substr($c->date, 0, 19))));						$comment->appendChild($name);					}										$loc->appendChild($comment);									}							}						$locs->appendChild($loc);					}				$name = $doc->createAttribute("count");		$name->appendChild($doc->createTextNode(count($this->venues)));		$locs->appendChild($name);				// add game descriptions from dict array;		$dict = $doc->createElement("dict");				foreach ($this->meta->gamedict->en as $key => $desc) {						$entry = $doc->createElement("entry");			$name = $doc->createAttribute("key");			$name->appendChild($doc->createTextNode($key));			$entry->appendChild($name);			$entry->appendChild($doc->createTextNode($desc));			$dict->appendChild($entry);				}				$meta->appendChild($dict);				if (!$minimal) {			// add meta to root;			$r->appendChild($meta);		}				// add locs to root;		$r->appendChild($locs);				return $doc->saveXML();			}}class Venue {	public $id;	public $name;	public $street;	public $city;	public $state;	public $zipcode;	public $country;	public $lat;	public $lon;	public $phone;	public $source;	public $url;	public $dist;	public $updated;	public $flag;		public $fsqid;	public $games;	public $comments;	function __construct() {		$this->games = array();		$this->comments = array();	}	public function addGame($game) {		$this->games[] = $game;	}	public function addComment($comment) {		$this->comments[] = $comment;	}	function __sleep() {		$keys = array();		foreach (get_object_vars($this) as $key => $var) {			if ($var != null) {				$keys[] = $key;			}		}		return $keys;	}}class Game {	public $id;	public $abbr;	public $cond;	public $price;	public $ipdb;	public $new;	public $rare;	public $flag;	public $deleted;}class Comment {	public $id;	public $date;	public $text;}?>